# Stage 1: Build dependencies and create wheels
FROM apache/airflow:slim-3.0.5-python3.12 AS builder

USER root
RUN apt-get update && apt-get install -y build-essential libpq-dev \
    && rm -rf /var/lib/apt/lists/*

USER airflow
WORKDIR /opt/airflow

COPY ./config/requirements.txt ./config/requirements-dev.txt ./

# Build wheels
RUN pip install --upgrade pip \
    && pip wheel --no-cache-dir --wheel-dir /home/airflow/wheels -r requirements.txt \
    && pip wheel --no-cache-dir --wheel-dir /home/airflow/wheels -r requirements-dev.txt \
    && rm -rf /home/airflow/.cache/pip

# Stage 2: Production image
FROM apache/airflow:slim-3.0.5-python3.12

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Copy wheels
COPY --from=builder /home/airflow/wheels /home/airflow/wheels


WORKDIR /opt/airflow
ENV PYTHONPATH="/opt/airflow/src:${PYTHONPATH}"
COPY ./config/requirements.txt ./config/requirements-dev.txt ./

USER root
RUN apt-get update && apt-get install -y libpq-dev \
    && chown -R airflow: /home/airflow/wheels \
    && rm -rf /var/lib/apt/lists/*

USER airflow
RUN pip install --no-cache-dir --no-index --find-links=/home/airflow/wheels -r requirements.txt \
    && pip install --no-cache-dir --no-index --find-links=/home/airflow/wheels -r requirements-dev.txt \
    && rm -rf /home/airflow/wheels /home/airflow/.cache/pip

# Use entrypoint from Airflow image
ENTRYPOINT ["/entrypoint"]
