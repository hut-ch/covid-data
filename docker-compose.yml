services:
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    hostname: ${DB_HOST}
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - '${DB_EXTERNAL_PORT}:5432'
    volumes:
      - ./.db:/var/lib/postgresql/data
      - ./config/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
      - ./config/metabase_db_backup.sql:/backup/metabase_db_backup.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 30s
      retries: 5

  pgadmin:
    container_name: pgadmin
    hostname: ${PGADMIN_HOST}
    image: dpage/pgadmin4:9.7
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_MAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PW}
    ports:
      - '${PGADMIN_EXTERNAL_PORT}:80'
    volumes:
      - ./config/pgadmin-servers.json:/pgadmin4/servers.json
    depends_on:
      postgres:
        condition: service_healthy

  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    image: hut-ch/covid-airflow
    container_name: airflow-standalone
    environment:
      IRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/src/dags
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${AIRFLOW_DB_USER}:${AIRFLOW_DB_PW}@${DB_HOST}/${AIRFLOW_DB}
      _AIRFLOW_DB_MIGRATE: 'true'
      AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_ALL_ADMINS: "True"
    command: standalone
    user: "0:0"
    ports:
      - "${AIRFLOW_WEB_PORT}:8080"
    volumes:
      - ./.env:/opt/airflow/.env
      - ./src:/opt/airflow/src   # mount source code
      - ./data:/opt/airflow/data   # mount data folder for extract and transformations
      - ./.airflow/logs:/opt/airflow/logs
      - ./.airflow/plugins:/opt/airflow/plugins
      - ./.airflow/config:/opt/airflow/config
    depends_on:
      postgres:
        condition: service_healthy

  metabase:
    image: metabase/metabase:v0.56.4
    container_name: metabase
    hostname: metabase
    ports:
      - "${METABASE_PORT}:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: ${METABASE_DB}
      MB_DB_PORT: 5432
      MB_DB_USER: ${METABASE_DB_USER}
      MB_DB_PASS: ${METABASE_DB_PW}
      MB_DB_HOST: ${DB_HOST}
    healthcheck:
      test: curl --fail -I http://localhost:3000/api/health || exit 1
      interval: 15s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
